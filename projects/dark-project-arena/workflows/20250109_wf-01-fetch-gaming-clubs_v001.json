{
  "name": "WF-01 Fetch Gaming Clubs",
  "nodes": [
    {
      "id": "manual-trigger-001",
      "name": "Manual Trigger",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [260, 300],
      "parameters": {}
    },
    {
      "id": "schedule-trigger-001",
      "name": "Daily Schedule",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [260, 500],
      "parameters": {
        "rule": {
          "interval": [
            {
              "cronExpression": "0 3 * * *"
            }
          ]
        }
      }
    },
    {
      "id": "set-search-params-001",
      "name": "Set Search Parameters",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [500, 400],
      "parameters": {
        "mode": "manual",
        "duplicateItem": false,
        "assignments": {
          "assignments": [
            {
              "id": "city",
              "name": "city",
              "type": "string",
              "value": "Москва"
            },
            {
              "id": "searchQuery",
              "name": "searchQuery",
              "type": "string",
              "value": "компьютерный клуб"
            },
            {
              "id": "services",
              "name": "services",
              "type": "array",
              "value": "={{ ['yandex-maps', '2gis'] }}"
            }
          ]
        }
      }
    },
    {
      "id": "split-services-001",
      "name": "Split by Service",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [700, 400],
      "parameters": {
        "batchSize": 1,
        "options": {}
      }
    },
    {
      "id": "switch-service-001",
      "name": "Switch Service",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [900, 400],
      "parameters": {
        "mode": "expression",
        "rules": {
          "rules": [
            {
              "output": 0,
              "outputKey": "yandex",
              "expression": "={{ $json.services[$position] === 'yandex-maps' }}"
            },
            {
              "output": 1,
              "outputKey": "2gis",
              "expression": "={{ $json.services[$position] === '2gis' }}"
            }
          ]
        },
        "fallbackOutput": 2
      }
    },
    {
      "id": "http-yandex-001",
      "name": "Fetch Yandex Maps",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [1100, 300],
      "parameters": {
        "method": "GET",
        "url": "https://search-maps.yandex.ru/v1/",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "text",
              "value": "={{ $json.searchQuery }} {{ $json.city }}"
            },
            {
              "name": "type",
              "value": "biz"
            },
            {
              "name": "lang",
              "value": "ru_RU"
            },
            {
              "name": "results",
              "value": "100"
            },
            {
              "name": "apikey",
              "value": "={{ $credentials.apiKey }}"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "credentials": {
        "httpHeaderAuth": {
          "id": "YANDEX_MAPS_API",
          "name": "Yandex Maps API"
        }
      },
      "continueOnFail": true
    },
    {
      "id": "http-2gis-001",
      "name": "Fetch 2GIS",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [1100, 500],
      "parameters": {
        "method": "GET",
        "url": "https://catalog.api.2gis.com/3.0/items",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "q",
              "value": "={{ $json.searchQuery }}"
            },
            {
              "name": "city",
              "value": "={{ $json.city }}"
            },
            {
              "name": "type",
              "value": "branch"
            },
            {
              "name": "page_size",
              "value": "50"
            },
            {
              "name": "key",
              "value": "={{ $credentials.apiKey }}"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "credentials": {
        "httpHeaderAuth": {
          "id": "2GIS_API",
          "name": "2GIS API"
        }
      },
      "continueOnFail": true
    },
    {
      "id": "parse-yandex-001",
      "name": "Parse Yandex Results",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [1300, 300],
      "parameters": {
        "mode": "manual",
        "duplicateItem": false,
        "assignments": {
          "assignments": [
            {
              "id": "clubs",
              "name": "clubs",
              "type": "array",
              "value": "={{ $json.features?.map(feature => ({ name: feature.properties.name, address: feature.properties.address?.formatted || '', phone: feature.properties.CompanyMetaData?.Phones?.[0]?.formatted || '', city: $('Set Search Parameters').item.json.city, region: feature.properties.address?.Components?.find(c => c.kind === 'province')?.name || '', source: 'YandexMaps', coordinates: { lat: feature.geometry.coordinates[1], lon: feature.geometry.coordinates[0] }, url: feature.properties.CompanyMetaData?.url || '', hours: feature.properties.CompanyMetaData?.Hours?.text || '' })) || [] }}"
            }
          ]
        }
      }
    },
    {
      "id": "parse-2gis-001",
      "name": "Parse 2GIS Results",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [1300, 500],
      "parameters": {
        "mode": "manual",
        "duplicateItem": false,
        "assignments": {
          "assignments": [
            {
              "id": "clubs",
              "name": "clubs",
              "type": "array",
              "value": "={{ $json.result?.items?.map(item => ({ name: item.name, address: item.address_name || '', phone: item.contact_groups?.[0]?.contacts?.[0]?.value || '', city: $('Set Search Parameters').item.json.city, region: item.region?.name || '', source: '2GIS', isChain: item.org?.branch_count > 1, brand: item.org?.name || '', coordinates: { lat: item.point?.lat, lon: item.point?.lon }, url: item.contact_groups?.find(g => g.contacts?.find(c => c.type === 'website'))?.contacts?.[0]?.value || '', telegram: item.contact_groups?.find(g => g.contacts?.find(c => c.type === 'telegram'))?.contacts?.[0]?.value || '' })) || [] }}"
            }
          ]
        }
      }
    },
    {
      "id": "merge-results-001",
      "name": "Merge Results",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [1500, 400],
      "parameters": {
        "mode": "combine",
        "combinationMode": "mergeByPosition",
        "options": {}
      }
    },
    {
      "id": "flatten-clubs-001",
      "name": "Flatten Clubs Array",
      "type": "n8n-nodes-base.itemLists",
      "typeVersion": 3.2,
      "position": [1700, 400],
      "parameters": {
        "operation": "splitOutItems",
        "fieldToSplitOut": "clubs"
      }
    },
    {
      "id": "deduplicate-001",
      "name": "Deduplicate Clubs",
      "type": "n8n-nodes-base.removeDuplicates",
      "typeVersion": 1.1,
      "position": [1900, 400],
      "parameters": {
        "propertyName": "={{ $json.name + '_' + $json.address }}",
        "options": {}
      }
    },
    {
      "id": "redis-save-001",
      "name": "Save to Redis",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [2100, 400],
      "parameters": {
        "operation": "set",
        "key": "={{ 'raw_club:' + $json.name.replace(/[^a-zA-Z0-9А-Яа-я]/g, '_') + ':' + $json.address.replace(/[^a-zA-Z0-9А-Яа-я]/g, '_') }}",
        "value": "={{ JSON.stringify($json) }}",
        "keyType": "automatic",
        "expire": true,
        "ttl": 2592000
      },
      "credentials": {
        "redis": {
          "id": "REDIS_INTERNAL",
          "name": "Redis Internal"
        }
      }
    },
    {
      "id": "error-handler-001",
      "name": "Error Handler",
      "type": "n8n-nodes-base.errorTrigger",
      "typeVersion": 1,
      "position": [2300, 600],
      "parameters": {}
    },
    {
      "id": "notify-error-001",
      "name": "Notify Error",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [2500, 600],
      "parameters": {
        "operation": "sendMessage",
        "chatId": "={{ $env.TELEGRAM_ADMIN_CHAT_ID }}",
        "text": "={\u007b '❌ Error in WF-01 Fetch Gaming Clubs\\n\\n' + 'Error: ' + $json.error?.message + '\\n' + 'Node: ' + $json.error?.node?.name + '\\n' + 'Time: ' + new Date().toISOString() \u007d}",
        "additionalFields": {
          "parse_mode": "Markdown"
        }
      },
      "credentials": {
        "telegramApi": {
          "id": "TELEGRAM_BOT",
          "name": "Telegram Bot"
        }
      }
    }
  ],
  "connections": {
    "Manual Trigger": {
      "main": [
        [
          {
            "node": "Set Search Parameters",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Daily Schedule": {
      "main": [
        [
          {
            "node": "Set Search Parameters",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Search Parameters": {
      "main": [
        [
          {
            "node": "Split by Service",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split by Service": {
      "main": [
        [
          {
            "node": "Switch Service",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch Service": {
      "main": [
        [
          {
            "node": "Fetch Yandex Maps",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Fetch 2GIS",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch Yandex Maps": {
      "main": [
        [
          {
            "node": "Parse Yandex Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch 2GIS": {
      "main": [
        [
          {
            "node": "Parse 2GIS Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parse Yandex Results": {
      "main": [
        [
          {
            "node": "Merge Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parse 2GIS Results": {
      "main": [
        [
          {
            "node": "Merge Results",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge Results": {
      "main": [
        [
          {
            "node": "Flatten Clubs Array",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Flatten Clubs Array": {
      "main": [
        [
          {
            "node": "Deduplicate Clubs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Deduplicate Clubs": {
      "main": [
        [
          {
            "node": "Save to Redis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Error Handler": {
      "main": [
        [
          {
            "node": "Notify Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "version": 2,
  "meta": {
    "description": "Fetches gaming clubs data from Yandex Maps and 2GIS APIs daily",
    "tags": ["parser", "data-collection", "gaming-clubs"]
  }
}