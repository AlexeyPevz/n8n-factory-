{
  "name": "WF-05 Hot Lead Handoff",
  "nodes": [
    {
      "id": "webhook-trigger-001",
      "name": "Hot Lead Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [260, 400],
      "parameters": {
        "httpMethod": "POST",
        "path": "hot-lead-handoff",
        "responseMode": "responseNode",
        "options": {}
      }
    },
    {
      "id": "bitrix24-trigger-001",
      "name": "Bitrix24 Hot Lead Trigger",
      "type": "n8n-nodes-base.bitrix24Trigger",
      "typeVersion": 1,
      "position": [260, 600],
      "parameters": {
        "resource": "lead",
        "event": "update",
        "additionalFields": {
          "filter": {
            "STATUS_ID": "HOT"
          }
        }
      },
      "credentials": {
        "bitrix24Api": {
          "id": "BITRIX24_CRM",
          "name": "Bitrix24 CRM"
        }
      }
    },
    {
      "id": "get-lead-full-001",
      "name": "Get Full Lead Data",
      "type": "n8n-nodes-base.bitrix24",
      "typeVersion": 1,
      "position": [460, 500],
      "parameters": {
        "resource": "lead",
        "operation": "get",
        "leadId": "={{ $json.leadId || $json.ID }}"
      },
      "credentials": {
        "bitrix24Api": {
          "id": "BITRIX24_CRM",
          "name": "Bitrix24 CRM"
        }
      }
    },
    {
      "id": "prepare-handoff-data-001",
      "name": "Prepare Handoff Data",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3,
      "position": [660, 500],
      "parameters": {
        "mode": "manual",
        "duplicateItem": false,
        "assignments": {
          "assignments": [
            {
              "id": "handoffData",
              "name": "handoffData",
              "type": "object",
              "value": "={{ {\n  leadId: $json.ID,\n  timestamp: new Date().toISOString(),\n  clubInfo: {\n    name: $json.TITLE,\n    city: $json.ADDRESS_CITY,\n    region: $json.ADDRESS_PROVINCE,\n    address: $json.ADDRESS,\n    isChain: $json.UF_CRM_IS_CHAIN === 'Y',\n    coordinates: $json.UF_CRM_COORDINATES\n  },\n  contacts: {\n    phone: $json.PHONE?.[0]?.VALUE || '',\n    email: $json.EMAIL?.[0]?.VALUE || '',\n    telegram: $json.UF_CRM_TELEGRAM || '',\n    contactPerson: $json.NAME || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'\n  },\n  engagement: {\n    source: $json.SOURCE_DESCRIPTION,\n    createdDate: $json.DATE_CREATE,\n    lastActivity: $json.DATE_MODIFY,\n    comments: $json.COMMENTS\n  },\n  opportunity: {\n    estimatedDealSize: $json.OPPORTUNITY || 0,\n    currency: $json.CURRENCY_ID || 'RUB'\n  }\n} }}"
            }
          ]
        }
      }
    },
    {
      "id": "generate-proposal-001",
      "name": "Generate Commercial Proposal",
      "type": "n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [860, 500],
      "parameters": {
        "model": "gpt-4o",
        "temperature": 0.3,
        "maxTokens": 2000,
        "systemMessage": "–¢—ã - —ç–∫—Å–ø–µ—Ä—Ç –ø–æ —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—é –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –¥–ª—è –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã—Ö –∫–ª—É–±–æ–≤. –°–æ–∑–¥–∞–≤–∞–π —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ, —É–±–µ–¥–∏—Ç–µ–ª—å–Ω—ã–µ –ö–ü —Å —Ñ–æ–∫—É—Å–æ–º –Ω–∞ –≤—ã–≥–æ–¥—ã –∫–ª–∏–µ–Ω—Ç–∞.",
        "messages": "={{ `–°–æ–∑–¥–∞–π –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è:\n\n–ö–ª—É–±: ${$json.handoffData.clubInfo.name}\n–ì–æ—Ä–æ–¥: ${$json.handoffData.clubInfo.city}\n–°–µ—Ç—å: ${$json.handoffData.clubInfo.isChain ? '–î–∞' : '–ù–µ—Ç'}\n\n–í–∫–ª—é—á–∏:\n1. –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ\n2. –ê–Ω–∞–ª–∏–∑ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–µ–π (–∏—Å—Ö–æ–¥—è –∏–∑ —Ç–∏–ø–∞ –∫–ª—É–±–∞)\n3. –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π –∫–æ–º–ø–ª–µ–∫—Ç –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è Dark Project Arena\n4. –†–∞—Å—á–µ—Ç ROI –∏ –æ–∫—É–ø–∞–µ–º–æ—Å—Ç–∏\n5. –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —É—Å–ª–æ–≤–∏—è (–µ—Å–ª–∏ —Å–µ—Ç—å)\n6. –ü—Ä–∏–∑—ã–≤ –∫ –¥–µ–π—Å—Ç–≤–∏—é\n\n–ò—Å–ø–æ–ª—å–∑—É–π –¥–∞–Ω–Ω—ã–µ:\n- –ú—ã—à–∏ Arena: 2500-3500 —Ä—É–±\n- –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã Arena: 3000-4500 —Ä—É–±\n- –ì–∞—Ä–Ω–∏—Ç—É—Ä—ã Arena: 4000-6000 —Ä—É–±\n- –ö–æ–≤—Ä—ã Arena: 1500-2000 —Ä—É–±\n- –°—Ä–µ–¥–Ω–∏–π —á–µ–∫ –∫–ª—É–±–∞: 150 —Ä—É–±/—á–∞—Å\n- –£–≤–µ–ª–∏—á–µ–Ω–∏–µ –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç–∏ —Å –Ω–æ–≤—ã–º –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ–º: 15-20%` }}",
        "options": {}
      },
      "credentials": {
        "openAiApi": {
          "id": "LLM_KEY",
          "name": "OpenAI API"
        }
      }
    },
    {
      "id": "create-pdf-proposal-001",
      "name": "Generate PDF via API",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [1060, 500],
      "parameters": {
        "method": "POST",
        "url": "={{ $env.PDF_SERVICE_URL }}/render",
        "jsonParameters": true,
        "sendBody": true,
        "bodyParametersJson": "={{ { html: `<html><head><meta charset=\\\"utf-8\\\"></head><body><h2>–ö–æ–º–º–µ—Ä—á–µ—Å–∫–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ</h2><p><b>–ö–ª—É–±:</b> ${$json.handoffData.clubInfo.name}</p><p><b>–ì–æ—Ä–æ–¥:</b> ${$json.handoffData.clubInfo.city}</p><hr/><div style=\\\"white-space:pre-wrap\\\">${$json.message}</div></body></html>` } }}",
        "responseFormat": "file",
        "options": { "timeout": 60000 },
        "settings": { "retryOnFail": true, "maxTries": 3, "waitBetweenTries": 1000 }
      }
    },
    {
      "id": "notify-supplier-telegram-001",
      "name": "Notify Supplier Telegram",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1,
      "position": [1260, 400],
      "parameters": {
        "operation": "sendMessage",
        "chatId": "={{ $env.SUPPLIER_TELEGRAM_CHAT_ID }}",
        "text": "={{ `üî• *–ì–û–†–Ø–ß–ò–ô –õ–ò–î!*\n\nüè¢ *–ö–ª—É–±:* ${$json.handoffData.clubInfo.name}\nüìç *–ì–æ—Ä–æ–¥:* ${$json.handoffData.clubInfo.city}\n${$json.handoffData.clubInfo.isChain ? 'üîó *–°–µ—Ç–µ–≤–æ–π –∫–ª—É–±*\n' : ''}\nüìû *–¢–µ–ª–µ—Ñ–æ–Ω:* ${$json.handoffData.contacts.phone}\n‚úâÔ∏è *Email:* ${$json.handoffData.contacts.email || '–ù–µ —É–∫–∞–∑–∞–Ω'}\nüí¨ *Telegram:* ${$json.handoffData.contacts.telegram || '–ù–µ —É–∫–∞–∑–∞–Ω'}\n\nüí∞ *–ü–æ—Ç–µ–Ω—Ü–∏–∞–ª —Å–¥–µ–ª–∫–∏:* ${$json.handoffData.opportunity.estimatedDealSize || '–ù–µ –æ—Ü–µ–Ω–µ–Ω'} ${$json.handoffData.opportunity.currency}\n\nüìã *–ò—Å—Ç–æ—Ä–∏—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è:*\n${$json.handoffData.engagement.comments?.slice(-500) || '–ù–µ—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤'}\n\nüìé –ö–ü –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ email –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞\nüîó [–û—Ç–∫—Ä—ã—Ç—å –≤ CRM](https://your-bitrix24.ru/crm/lead/details/${$json.handoffData.leadId}/)` }}",
        "additionalFields": {
          "parse_mode": "Markdown",
          "reply_markup": {
            "inline_keyboard": [
              [
                {
                  "text": "‚úÖ –í–∑—è—Ç—å –≤ —Ä–∞–±–æ—Ç—É",
                  "callback_data": "supplier_take_lead"
                }
              ],
              [
                {
                  "text": "üìû –°–≤—è–∑–∞–ª—Å—è —Å –∫–ª–∏–µ–Ω—Ç–æ–º",
                  "callback_data": "supplier_contacted"
                }
              ]
            ]
          }
        }
      },
      "credentials": {
        "telegramApi": {
          "id": "TELEGRAM_BOT",
          "name": "Telegram Bot"
        }
      }
    },
    {
      "id": "send-email-supplier-001",
      "name": "Send Email to Supplier",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2,
      "position": [1260, 600],
      "parameters": {
        "sendTo": "={{ $env.SUPPLIER_EMAIL }}",
        "subject": "={{ `üî• –ì–æ—Ä—è—á–∏–π –ª–∏–¥: ${$json.handoffData.clubInfo.name} - ${$json.handoffData.clubInfo.city}` }}",
        "emailType": "html",
        "htmlBody": "={{ `<!DOCTYPE html>\n<html>\n<head>\n  <style>\n    body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }\n    .container { max-width: 600px; margin: 0 auto; padding: 20px; }\n    .header { background: #2c3e50; color: white; padding: 20px; text-align: center; }\n    .content { padding: 20px; background: #f4f4f4; }\n    .info-block { background: white; padding: 15px; margin: 10px 0; border-radius: 5px; }\n    .cta { background: #e74c3c; color: white; padding: 15px 30px; text-decoration: none; display: inline-block; margin: 20px 0; border-radius: 5px; }\n  </style>\n</head>\n<body>\n  <div class=\"container\">\n    <div class=\"header\">\n      <h1>üî• –ì–æ—Ä—è—á–∏–π –ª–∏–¥ –ø–µ—Ä–µ–¥–∞–Ω –≤ —Ä–∞–±–æ—Ç—É</h1>\n    </div>\n    <div class=\"content\">\n      <div class=\"info-block\">\n        <h2>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–ª—É–±–µ</h2>\n        <p><strong>–ù–∞–∑–≤–∞–Ω–∏–µ:</strong> ${$json.handoffData.clubInfo.name}</p>\n        <p><strong>–ì–æ—Ä–æ–¥:</strong> ${$json.handoffData.clubInfo.city}</p>\n        <p><strong>–ê–¥—Ä–µ—Å:</strong> ${$json.handoffData.clubInfo.address}</p>\n        <p><strong>–°–µ—Ç–µ–≤–æ–π –∫–ª—É–±:</strong> ${$json.handoffData.clubInfo.isChain ? '–î–∞' : '–ù–µ—Ç'}</p>\n      </div>\n      \n      <div class=\"info-block\">\n        <h2>–ö–æ–Ω—Ç–∞–∫—Ç—ã</h2>\n        <p><strong>–¢–µ–ª–µ—Ñ–æ–Ω:</strong> ${$json.handoffData.contacts.phone}</p>\n        <p><strong>Email:</strong> ${$json.handoffData.contacts.email || '–ù–µ —É–∫–∞–∑–∞–Ω'}</p>\n        <p><strong>Telegram:</strong> ${$json.handoffData.contacts.telegram || '–ù–µ —É–∫–∞–∑–∞–Ω'}</p>\n        <p><strong>–ö–æ–Ω—Ç–∞–∫—Ç–Ω–æ–µ –ª–∏—Ü–æ:</strong> ${$json.handoffData.contacts.contactPerson}</p>\n      </div>\n      \n      <div class=\"info-block\">\n        <h2>–ö–æ–º–º–µ—Ä—á–µ—Å–∫–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ</h2>\n        <p>${$json.message?.replace(/\\n/g, '<br>')}</p>\n      </div>\n      \n      <a href=\"https://your-bitrix24.ru/crm/lead/details/${$json.handoffData.leadId}/\" class=\"cta\">–û—Ç–∫—Ä—ã—Ç—å –≤ CRM</a>\n    </div>\n  </div>\n</body>\n</html>` }}",
        "attachments": { "attachments": [ { "binaryPropertyName": "data" } ] },
        "options": {
          "allowUnauthorizedCerts": true
        }
      },
      "credentials": {
        "smtp": {
          "id": "SMTP_CREDENTIALS",
          "name": "SMTP Server"
        }
      }
    },
    {
      "id": "convert-lead-001",
      "name": "Convert Lead",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [1460, 500],
      "parameters": {
        "method": "POST",
        "url": "={{ $env.BITRIX24_DOMAIN }}/rest/crm.lead.convert",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpQueryAuth",
        "jsonParameters": true,
        "sendBody": true,
        "bodyParametersJson": "={{ { id: $json.handoffData.leadId, params: { CONVERT_DEAL: 'Y', CONVERT_CONTACT: 'Y', CONVERT_COMPANY: 'N', DEAL_CATEGORY_ID: 0, ASSIGNED_BY_ID: $env.SUPPLIER_BITRIX_USER_ID } } }}",
        "options": { "timeout": 30000 },
        "settings": { "retryOnFail": true, "maxTries": 3, "waitBetweenTries": 1000 }
      },
      "credentials": {
        "httpQueryAuth": {
          "id": "BITRIX24_WEBHOOK",
          "name": "Bitrix24 Webhook"
        }
      }
    },
    {
      "id": "log-handoff-001",
      "name": "Log Handoff Activity",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [1660, 500],
      "parameters": {
        "operation": "set",
        "key": "={{ `handoff_log:${$json.handoffData.leadId}:${Date.now()}` }}",
        "value": "={{ JSON.stringify({\n  leadId: $json.handoffData.leadId,\n  clubName: $json.handoffData.clubInfo.name,\n  city: $json.handoffData.clubInfo.city,\n  handoffTime: new Date().toISOString(),\n  supplierNotified: true,\n  proposalGenerated: true,\n  estimatedValue: $json.handoffData.opportunity.estimatedDealSize\n}) }}",
        "keyType": "automatic",
        "expire": true,
        "ttl": 7776000
      },
      "credentials": {
        "redis": {
          "id": "REDIS_INTERNAL",
          "name": "Redis Internal"
        }
      }
    },
    {
      "id": "webhook-response-001",
      "name": "Webhook Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [1860, 400],
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ {\n  success: true,\n  leadId: $json.handoffData.leadId,\n  message: 'Hot lead successfully handed off to supplier',\n  notifications: {\n    telegram: true,\n    email: true\n  },\n  timestamp: new Date().toISOString()\n} }}",
        "options": {}
      }
    },
    {
      "id": "error-handler-001",
      "name": "Error Handler",
      "type": "n8n-nodes-base.errorTrigger",
      "typeVersion": 1,
      "position": [1860, 700],
      "parameters": {}
    },
    {
      "id": "handle-error-001",
      "name": "Handle Error",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [2060, 700],
      "parameters": {
        "functionCode": "const error = {\n  workflow: 'WF-05 Hot Lead Handoff',\n  timestamp: new Date().toISOString(),\n  error: items[0].json.error,\n  leadData: items[0].json.handoffData || {}\n};\n\nconsole.error('Hot Lead Handoff Error:', error);\n\n// Notify admin about critical error\nreturn [{ json: error }];"
      }
    },
    {
      "id": "notify-admin-error-001",
      "name": "Notify Admin Error",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1,
      "position": [2260, 700],
      "parameters": {
        "operation": "sendMessage",
        "chatId": "={{ $env.TELEGRAM_ADMIN_CHAT_ID }}",
        "text": "={{ `‚ùå *CRITICAL ERROR in Hot Lead Handoff*\n\nLead: ${$json.leadData.clubInfo?.name || 'Unknown'}\nError: ${$json.error.message}\nNode: ${$json.error.node?.name}\n\nRequires immediate attention!` }}",
        "additionalFields": {
          "parse_mode": "Markdown"
        }
      },
      "credentials": {
        "telegramApi": {
          "id": "TELEGRAM_BOT",
          "name": "Telegram Bot"
        }
      }
    }
  ],
  "connections": {
    "Hot Lead Webhook": {
      "main": [
        [
          {
            "node": "Get Full Lead Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Bitrix24 Hot Lead Trigger": {
      "main": [
        [
          {
            "node": "Get Full Lead Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Full Lead Data": {
      "main": [
        [
          {
            "node": "Prepare Handoff Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare Handoff Data": {
      "main": [
        [
          {
            "node": "Generate Commercial Proposal",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Commercial Proposal": {
      "main": [
        [
          {
            "node": "Create PDF Proposal",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate PDF via API": {
      "main": [
        [
          {
            "node": "Notify Supplier Telegram",
            "type": "main",
            "index": 0
          },
          {
            "node": "Send Email to Supplier",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Notify Supplier Telegram": {
      "main": [
        [
          {
            "node": "Convert Lead",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Email to Supplier": {
      "main": [
        [
          {
            "node": "Convert Lead",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert Lead": {
      "main": [
        [
          {
            "node": "Log Handoff Activity",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Log Handoff Activity": {
      "main": [
        [
          {
            "node": "Webhook Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Error Handler": {
      "main": [
        [
          {
            "node": "Handle Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Handle Error": {
      "main": [
        [
          {
            "node": "Notify Admin Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1",
    "saveManualExecutions": true
  },
  "version": 2,
  "meta": {
    "description": "Handles hot lead handoff to supplier with automated proposal generation and notifications",
    "tags": ["hot-lead", "handoff", "supplier", "proposal-generation"]
  }
}