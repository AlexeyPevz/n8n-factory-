{
  "name": "WF-06 Post Sale Followup",
  "nodes": [
    {
      "id": "bitrix-trigger-001",
      "name": "Bitrix24 Deal Success",
      "type": "n8n-nodes-base.bitrix24Trigger",
      "typeVersion": 1,
      "position": [260, 400],
      "parameters": {
        "eventsUi": {
          "eventValues": [
            {
              "name": "onCrmDealUpdate"
            }
          ]
        },
        "additionalFields": {}
      },
      "credentials": {
        "bitrix24Api": {
          "id": "BITRIX24_CRM",
          "name": "Bitrix24 CRM"
        }
      }
    },
    {
      "id": "manual-trigger-001",
      "name": "Manual Trigger",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [260, 500],
      "parameters": {}
    },
    {
      "id": "merge-triggers-001",
      "name": "Merge Triggers",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2,
      "position": [460, 450],
      "parameters": {
        "mode": "combine",
        "combinationMode": "chooseBranch",
        "options": {}
      }
    },
    {
      "id": "check-success-status-001",
      "name": "Check Success Status",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [660, 450],
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "isSuccess",
              "leftValue": "={{ $json.data?.STAGE_ID || $json.STAGE_ID }}",
              "rightValue": "WON",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      }
    },
    {
      "id": "get-deal-details-001",
      "name": "Get Deal Details",
      "type": "n8n-nodes-base.bitrix24",
      "typeVersion": 1,
      "position": [860, 350],
      "parameters": {
        "resource": "deal",
        "operation": "get",
        "dealId": "={{ $json.data?.ID || $json.ID || $json.dealId }}"
      },
      "credentials": {
        "bitrix24Api": {
          "id": "BITRIX24_CRM",
          "name": "Bitrix24 CRM"
        }
      }
    },
    {
      "id": "get-contact-details-001",
      "name": "Get Contact Details",
      "type": "n8n-nodes-base.bitrix24",
      "typeVersion": 1,
      "position": [1060, 350],
      "parameters": {
        "resource": "contact",
        "operation": "get",
        "contactId": "={{ $json.CONTACT_ID }}"
      },
      "credentials": {
        "bitrix24Api": {
          "id": "BITRIX24_CRM",
          "name": "Bitrix24 CRM"
        }
      },
      "continueOnFail": true
    },
    {
      "id": "prepare-followup-data-001",
      "name": "Prepare Followup Data",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [1260, 350],
      "parameters": {
        "functionCode": "const deal = $node['Get Deal Details'].json;\nconst contact = $node['Get Contact Details'].json || {};\n\n// –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è follow-up\nconst followupData = {\n  dealId: deal.ID,\n  dealTitle: deal.TITLE || '–°–¥–µ–ª–∫–∞',\n  clubName: deal.TITLE?.split(' - ')[0] || deal.COMPANY_TITLE || '–ö–ª—É–±',\n  contactName: contact.NAME || deal.UF_CRM_CONTACT_NAME || '–ö–ª–∏–µ–Ω—Ç',\n  contactPhone: contact.PHONE?.[0]?.VALUE || deal.UF_CRM_PHONE || '',\n  contactEmail: contact.EMAIL?.[0]?.VALUE || deal.UF_CRM_EMAIL || '',\n  telegram: contact.UF_CRM_TELEGRAM || deal.UF_CRM_TELEGRAM || '',\n  dealAmount: parseFloat(deal.OPPORTUNITY) || 0,\n  closeDate: deal.CLOSEDATE || new Date().toISOString(),\n  city: deal.UF_CRM_CITY || contact.ADDRESS_CITY || '–ù–µ —É–∫–∞–∑–∞–Ω',\n  timestamp: new Date().toISOString()\n};\n\n// –°–æ–∑–¥–∞–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ follow-up –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤\nfollowupData.schedule = [\n  {\n    delay: 7,\n    type: 'satisfaction_check',\n    message: '–ü—Ä–æ–≤–µ—Ä–∫–∞ —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–Ω–æ—Å—Ç–∏ –ø–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏'\n  },\n  {\n    delay: 30,\n    type: 'first_month_feedback',\n    message: '–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å —á–µ—Ä–µ–∑ –º–µ—Å—è—Ü –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è'\n  },\n  {\n    delay: 90,\n    type: 'quarterly_review',\n    message: '–ö–≤–∞—Ä—Ç–∞–ª—å–Ω—ã–π –æ–±–∑–æ—Ä –∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏'\n  },\n  {\n    delay: 180,\n    type: 'upgrade_opportunity',\n    message: '–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è/—Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è'\n  }\n];\n\nconsole.log(`Preparing post-sale followup for ${followupData.clubName}`);\n\nreturn [{ json: followupData }];"
      }
    },
    {
      "id": "create-followup-tasks-001",
      "name": "Create Followup Tasks",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [1460, 350],
      "parameters": {
        "batchSize": 1,
        "options": {}
      }
    },
    {
      "id": "schedule-task-001",
      "name": "Schedule Task",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [1660, 350],
      "parameters": {
        "functionCode": "const followup = $node['Prepare Followup Data'].json;\nconst scheduleItem = $json;\nconst batchIndex = $node['Create Followup Tasks'].context.currentRunIndex;\n\n// –ü–æ–ª—É—á–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è\nconst task = followup.schedule[batchIndex];\n\n// –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –¥–∞—Ç—É –∑–∞–¥–∞—á–∏\nconst taskDate = new Date(followup.closeDate);\ntaskDate.setDate(taskDate.getDate() + task.delay);\n\nconst taskData = {\n  title: `Follow-up: ${followup.clubName} - ${task.type}`,\n  description: `\n**Post-Sale Follow-up**\n\n–ö–ª—É–±: ${followup.clubName}\n–ö–æ–Ω—Ç–∞–∫—Ç: ${followup.contactName}\n–¢–µ–ª–µ—Ñ–æ–Ω: ${followup.contactPhone}\nEmail: ${followup.contactEmail}\nTelegram: ${followup.telegram}\n\n–°—É–º–º–∞ —Å–¥–µ–ª–∫–∏: ${followup.dealAmount.toLocaleString('ru-RU')} —Ä—É–±\n–î–∞—Ç–∞ –∑–∞–∫—Ä—ã—Ç–∏—è: ${new Date(followup.closeDate).toLocaleDateString('ru-RU')}\n\n**–¶–µ–ª—å –∫–æ–Ω—Ç–∞–∫—Ç–∞:** ${task.message}\n\n**–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:**\n1. –°–≤—è–∑–∞—Ç—å—Å—è —Å –∫–ª–∏–µ–Ω—Ç–æ–º\n2. –£–∑–Ω–∞—Ç—å –æ —Ç–µ–∫—É—â–µ–º –æ–ø—ã—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è\n3. –í—ã—è–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏\n4. –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã/—É—Å–ª—É–≥–∏\n`,\n  deadline: taskDate.toISOString(),\n  dealId: followup.dealId,\n  type: task.type,\n  delay: task.delay\n};\n\nreturn [{ json: taskData }];"
      }
    },
    {
      "id": "wait-until-date-001",
      "name": "Wait Until Task Date",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1,
      "position": [1860, 350],
      "parameters": {
        "resume": "specificTime",
        "dateTime": "={{ $json.deadline }}"
      }
    },
    {
      "id": "create-bitrix-task-001",
      "name": "Create Bitrix Task",
      "type": "n8n-nodes-base.bitrix24",
      "typeVersion": 1,
      "position": [2060, 350],
      "parameters": {
        "resource": "task",
        "operation": "create",
        "title": "={{ $json.title }}",
        "description": "={{ $json.description }}",
        "additionalFields": {
          "deadline": "={{ $json.deadline }}",
          "responsible_id": "={{ $env.ACCOUNT_MANAGER_ID }}",
          "priority": "1",
          "crm": {
            "deal": ["{{ $json.dealId }}"]
          },
          "tags": ["followup", "post-sale", "{{ $json.type }}"]
        }
      },
      "credentials": {
        "bitrix24Api": {
          "id": "BITRIX24_CRM",
          "name": "Bitrix24 CRM"
        }
      }
    },
    {
      "id": "send-reminder-001",
      "name": "Send Reminder",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1,
      "position": [2260, 350],
      "parameters": {
        "operation": "sendMessage",
        "chatId": "={{ $env.TELEGRAM_SALES_CHAT_ID }}",
        "text": "={{ `üìÖ <b>Post-Sale Follow-up Reminder</b>\\n\\nüè¢ –ö–ª—É–±: ${$node['Prepare Followup Data'].json.clubName}\\nüë§ –ö–æ–Ω—Ç–∞–∫—Ç: ${$node['Prepare Followup Data'].json.contactName}\\nüì± –¢–µ–ª–µ—Ñ–æ–Ω: ${$node['Prepare Followup Data'].json.contactPhone}\\nüí∞ –°—É–º–º–∞ —Å–¥–µ–ª–∫–∏: ${$node['Prepare Followup Data'].json.dealAmount.toLocaleString('ru-RU')} —Ä—É–±\\n\\n‚è∞ –¢–∏–ø –∫–æ–Ω—Ç–∞–∫—Ç–∞: ${$json.type}\\nüìã ${$node['Prepare Followup Data'].json.schedule.find(s => s.type === $json.type).message}\\n\\n‚úÖ –ó–∞–¥–∞—á–∞ —Å–æ–∑–¥–∞–Ω–∞ –≤ Bitrix24` }}",
        "additionalFields": {
          "parse_mode": "HTML",
          "disable_notification": false,
          "reply_markup": {
            "inline_keyboard": [
              [
                {
                  "text": "üìû –ü–æ–∑–≤–æ–Ω–∏—Ç—å",
                  "url": "tel:{{$node['Prepare Followup Data'].json.contactPhone}}"
                },
                {
                  "text": "üí¨ Telegram",
                  "url": "https://t.me/{{$node['Prepare Followup Data'].json.telegram}}"
                }
              ]
            ]
          }
        }
      },
      "credentials": {
        "telegramApi": {
          "id": "TELEGRAM_BOT",
          "name": "Telegram Bot"
        }
      }
    },
    {
      "id": "log-followup-001",
      "name": "Log Followup",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [2460, 350],
      "parameters": {
        "operation": "set",
        "key": "={{ `followup:${$json.dealId}:${$json.type}:${Date.now()}` }}",
        "value": "={{ JSON.stringify({ ...$node['Prepare Followup Data'].json, taskType: $json.type, taskCreated: true, timestamp: new Date().toISOString() }) }}",
        "expire": true,
        "ttl": 31536000
      },
      "credentials": {
        "redis": {
          "id": "REDIS_INTERNAL",
          "name": "Redis Internal"
        }
      }
    },
    {
      "id": "check-more-tasks-001",
      "name": "Check More Tasks",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [2660, 350],
      "parameters": {}
    },
    {
      "id": "complete-001",
      "name": "Complete",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [2860, 450],
      "parameters": {
        "functionCode": "const followup = $node['Prepare Followup Data'].json;\n\nconst result = {\n  success: true,\n  workflow: 'WF-06',\n  action: 'post_sale_followup_scheduled',\n  dealId: followup.dealId,\n  clubName: followup.clubName,\n  tasksScheduled: followup.schedule.length,\n  timestamp: new Date().toISOString()\n};\n\nconsole.log(`Post-sale followup scheduled for ${result.clubName}`);\n\nreturn [{ json: result }];"
      }
    },
    {
      "id": "error-trigger-001",
      "name": "Error Trigger",
      "type": "n8n-nodes-base.errorTrigger",
      "typeVersion": 1,
      "position": [260, 700],
      "parameters": {}
    },
    {
      "id": "handle-error-001",
      "name": "Handle Error",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [460, 700],
      "parameters": {
        "functionCode": "const error = {\n  workflow: 'WF-06 Post Sale Followup',\n  timestamp: new Date().toISOString(),\n  error: $json.error?.message || 'Unknown error',\n  node: $json.error?.node?.name || 'Unknown',\n  dealId: $node['Prepare Followup Data']?.json?.dealId || 'Unknown'\n};\n\nconsole.error('WF-06 Error:', error);\n\nreturn [{ json: error }];"
      }
    },
    {
      "id": "save-error-001",
      "name": "Save Error",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [660, 700],
      "parameters": {
        "operation": "push",
        "list": "errors:followup",
        "messageData": "={{ JSON.stringify($json) }}",
        "pushType": "lpush",
        "expire": true,
        "ttl": 86400
      },
      "credentials": {
        "redis": {
          "id": "REDIS_INTERNAL",
          "name": "Redis Internal"
        }
      }
    }
  ],
  "connections": {
    "Bitrix24 Deal Success": {
      "main": [[{"node": "Merge Triggers", "type": "main", "index": 0}]]
    },
    "Manual Trigger": {
      "main": [[{"node": "Merge Triggers", "type": "main", "index": 1}]]
    },
    "Merge Triggers": {
      "main": [[{"node": "Check Success Status", "type": "main", "index": 0}]]
    },
    "Check Success Status": {
      "main": [
        [{"node": "Get Deal Details", "type": "main", "index": 0}],
        []
      ]
    },
    "Get Deal Details": {
      "main": [[{"node": "Get Contact Details", "type": "main", "index": 0}]]
    },
    "Get Contact Details": {
      "main": [[{"node": "Prepare Followup Data", "type": "main", "index": 0}]]
    },
    "Prepare Followup Data": {
      "main": [[{"node": "Create Followup Tasks", "type": "main", "index": 0}]]
    },
    "Create Followup Tasks": {
      "main": [
        [{"node": "Schedule Task", "type": "main", "index": 0}],
        [{"node": "Complete", "type": "main", "index": 0}]
      ]
    },
    "Schedule Task": {
      "main": [[{"node": "Wait Until Task Date", "type": "main", "index": 0}]]
    },
    "Wait Until Task Date": {
      "main": [[{"node": "Create Bitrix Task", "type": "main", "index": 0}]]
    },
    "Create Bitrix Task": {
      "main": [[{"node": "Send Reminder", "type": "main", "index": 0}]]
    },
    "Send Reminder": {
      "main": [[{"node": "Log Followup", "type": "main", "index": 0}]]
    },
    "Log Followup": {
      "main": [[{"node": "Check More Tasks", "type": "main", "index": 0}]]
    },
    "Check More Tasks": {
      "main": [[{"node": "Create Followup Tasks", "type": "main", "index": 0}]]
    },
    "Error Trigger": {
      "main": [[{"node": "Handle Error", "type": "main", "index": 0}]]
    },
    "Handle Error": {
      "main": [[{"node": "Save Error", "type": "main", "index": 0}]]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1",
    "saveManualExecutions": true,
    "callerPolicy": "workflowsFromSameOwner",
    "executionTimeout": 31536000,
    "timezone": "Europe/Moscow"
  },
  "version": 2,
  "id": "wf-06-post-sale-followup",
  "meta": {
    "templateCredsSetupCompleted": true,
    "description": "Schedules and manages post-sale follow-up activities with delay nodes for 7/30/90/180 days",
    "version": "1.0.0"
  },
  "tags": [
    {
      "id": "1",
      "name": "production"
    },
    {
      "id": "7",
      "name": "retention"
    }
  ]
}