{
  "name": "WF-06 Post Sale Followup",
  "nodes": [
    {
      "id": "bitrix24-deal-trigger-001",
      "name": "Bitrix24 Deal Won Trigger",
      "type": "n8n-nodes-base.bitrix24Trigger",
      "typeVersion": 1,
      "position": [260, 400],
      "parameters": {
        "resource": "deal",
        "event": "update",
        "additionalFields": {
          "filter": {
            "STAGE_ID": "WON"
          }
        }
      },
      "credentials": {
        "bitrix24Api": {
          "id": "BITRIX24_CRM",
          "name": "Bitrix24 CRM"
        }
      }
    },
    {
      "id": "get-deal-details-001",
      "name": "Get Deal Details",
      "type": "n8n-nodes-base.bitrix24",
      "typeVersion": 1,
      "position": [460, 400],
      "parameters": {
        "resource": "deal",
        "operation": "get",
        "dealId": "={{ $json.ID }}"
      },
      "credentials": {
        "bitrix24Api": {
          "id": "BITRIX24_CRM",
          "name": "Bitrix24 CRM"
        }
      }
    },
    {
      "id": "get-contact-info-001",
      "name": "Get Contact Info",
      "type": "n8n-nodes-base.bitrix24",
      "typeVersion": 1,
      "position": [660, 400],
      "parameters": {
        "resource": "contact",
        "operation": "get",
        "contactId": "={{ $json.CONTACT_ID }}"
      },
      "credentials": {
        "bitrix24Api": {
          "id": "BITRIX24_CRM",
          "name": "Bitrix24 CRM"
        }
      }
    },
    {
      "id": "prepare-followup-data-001",
      "name": "Prepare Followup Data",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [860, 400],
      "parameters": {
        "mode": "manual",
        "duplicateItem": false,
        "assignments": {
          "assignments": [
            {
              "id": "followupData",
              "name": "followupData",
              "type": "object",
              "value": "={{ {\n  dealId: $('Get Deal Details').item.json.ID,\n  dealAmount: $('Get Deal Details').item.json.OPPORTUNITY,\n  clubName: $('Get Deal Details').item.json.TITLE,\n  closeDate: $('Get Deal Details').item.json.CLOSEDATE,\n  contactName: $json.NAME || '',\n  contactPhone: $json.PHONE?.[0]?.VALUE || '',\n  contactEmail: $json.EMAIL?.[0]?.VALUE || '',\n  contactTelegram: $json.IM?.[0]?.VALUE || $json.UF_TELEGRAM || ''\n} }}"
            }
          ]
        }
      }
    },
    {
      "id": "schedule-followups-001",
      "name": "Schedule Followups",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [1060, 400],
      "parameters": {
        "functionCode": "// Calculate followup dates from deal close date\nconst closeDate = new Date(items[0].json.followupData.closeDate);\n\nconst followupSchedule = [\n  {\n    delay: 7,\n    type: 'week_1',\n    message: '–ü–µ—Ä–≤–∞—è –Ω–µ–¥–µ–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è'\n  },\n  {\n    delay: 30,\n    type: 'month_1',\n    message: '–ü–µ—Ä–≤—ã–π –º–µ—Å—è—Ü –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è'\n  },\n  {\n    delay: 90,\n    type: 'month_3',\n    message: '–¢—Ä–∏ –º–µ—Å—è—Ü–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è'\n  },\n  {\n    delay: 180,\n    type: 'month_6',\n    message: '–ü–æ–ª–≥–æ–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è'\n  }\n];\n\nconst outputs = followupSchedule.map(schedule => {\n  const followupDate = new Date(closeDate);\n  followupDate.setDate(followupDate.getDate() + schedule.delay);\n  \n  return {\n    json: {\n      ...items[0].json.followupData,\n      followupType: schedule.type,\n      followupMessage: schedule.message,\n      followupDate: followupDate.toISOString(),\n      daysFromClose: schedule.delay\n    }\n  };\n});\n\nreturn outputs;"
      }
    },
    {
      "id": "split-followups-001",
      "name": "Split Followups",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [1260, 400],
      "parameters": {
        "batchSize": 1,
        "options": {}
      }
    },
    {
      "id": "wait-until-date-001",
      "name": "Wait Until Followup Date",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [1460, 400],
      "parameters": {
        "resume": "date",
        "date": "={{ $json.followupDate }}",
        "options": {}
      }
    },
    {
      "id": "generate-followup-message-001",
      "name": "Generate Followup Message",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [1660, 400],
      "parameters": {
        "model": "gpt-4o",
        "temperature": 0.8,
        "maxTokens": 1000,
        "systemMessage": "–¢—ã - –º–µ–Ω–µ–¥–∂–µ—Ä –ø–æ —Ä–∞–±–æ—Ç–µ —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏ Dark Project. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ - –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å —Ç–µ–ø–ª—ã–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è –ø–æ—Å–ª–µ –ø—Ä–æ–¥–∞–∂–∏, —Å–æ–±–∏—Ä–∞—Ç—å –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å –∏ —Å–æ–∑–¥–∞–≤–∞—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –ø—Ä–æ–¥–∞–∂. –ë—É–¥—å –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–º, –∑–∞–±–æ—Ç–ª–∏–≤—ã–º –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–º.",
        "messages": "={{ `–°–æ–∑–¥–∞–π follow-up —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞.\n\n–ö–æ–Ω—Ç–µ–∫—Å—Ç:\n- –ö–ª—É–±: ${$json.clubName}\n- –ö–æ–Ω—Ç–∞–∫—Ç: ${$json.contactName}\n- –°—É–º–º–∞ —Å–¥–µ–ª–∫–∏: ${$json.dealAmount} —Ä—É–±\n- –î–∞—Ç–∞ –ø–æ–∫—É–ø–∫–∏: ${new Date($json.closeDate).toLocaleDateString('ru-RU')}\n- –¢–∏–ø followup: ${$json.followupMessage}\n\n–í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞:\n- –ù–µ–¥–µ–ª—è 1: –£–∑–Ω–∞–π, –∫–∞–∫ –ø—Ä–æ—à–ª–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∞, –≤—Å–µ –ª–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω—É–∂–Ω–∞ –ª–∏ –ø–æ–º–æ—â—å\n- –ú–µ—Å—è—Ü 1: –°–ø—Ä–æ—Å–∏ –æ –ø–µ—Ä–≤—ã—Ö –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è—Ö, —Å–æ–±–µ—Ä–∏ —Ñ–∏–¥–±–µ–∫ –æ—Ç –≥–µ–π–º–µ—Ä–æ–≤\n- –ú–µ—Å—è—Ü 3: –ü—Ä–µ–¥–ª–æ–∂–∏ –ø—Ä–æ–≤–µ—Ä–∫—É –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è, —Ä–∞—Å—Å–∫–∞–∂–∏ –æ –Ω–æ–≤–∏–Ω–∫–∞—Ö\n- –ú–µ—Å—è—Ü 6: –í—Ä–µ–º—è –¥–ª—è –∞–ø–≥—Ä–µ–π–¥–∞, —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –ø–æ—Å—Ç–æ—è–Ω–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤\n\n–í–∫–ª—é—á–∏ —ç–º–æ–¥–∑–∏, —Å–¥–µ–ª–∞–π —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–µ–ø–ª—ã–º –∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–º.` }}",
        "options": {}
      },
      "credentials": {
        "openAiApi": {
          "id": "LLM_KEY",
          "name": "OpenAI API"
        }
      }
    },
    {
      "id": "send-followup-telegram-001",
      "name": "Send Followup Telegram",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [1860, 300],
      "parameters": {
        "operation": "sendMessage",
        "chatId": "={{ $json.contactTelegram }}",
        "text": "={{ $json.message }}",
        "additionalFields": {
          "parse_mode": "Markdown",
          "reply_markup": {
            "inline_keyboard": [
              [
                {
                  "text": "üëç –í—Å–µ –æ—Ç–ª–∏—á–Ω–æ",
                  "callback_data": "feedback_excellent"
                },
                {
                  "text": "üëå –•–æ—Ä–æ—à–æ",
                  "callback_data": "feedback_good"
                }
              ],
              [
                {
                  "text": "ü§î –ï—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã",
                  "callback_data": "feedback_questions"
                }
              ],
              [
                {
                  "text": "üòï –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã",
                  "callback_data": "feedback_problems"
                }
              ]
            ]
          }
        }
      },
      "credentials": {
        "telegramApi": {
          "id": "TG_ROP_BOT",
          "name": "Telegram ROP Bot"
        }
      },
      "continueOnFail": true
    },
    {
      "id": "send-followup-email-001",
      "name": "Send Followup Email",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2.1,
      "position": [1860, 500],
      "parameters": {
        "sendTo": "={{ $json.contactEmail }}",
        "subject": "={\u007b `Dark Project | ${$json.followupMessage} - ${$json.clubName}` \u007d}",
        "emailType": "html",
        "htmlBody": "={\u007b `<!DOCTYPE html>\n<html>\n<head>\n  <style>\n    body { font-family: Arial, sans-serif; line-height: 1.8; color: #333; }\n    .container { max-width: 600px; margin: 0 auto; padding: 20px; }\n    .header { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 30px; text-align: center; border-radius: 10px 10px 0 0; }\n    .content { padding: 30px; background: #f8f9fa; border-radius: 0 0 10px 10px; }\n    .feedback-buttons { margin: 30px 0; text-align: center; }\n    .btn { display: inline-block; padding: 12px 30px; margin: 10px; text-decoration: none; border-radius: 25px; font-weight: bold; }\n    .btn-excellent { background: #28a745; color: white; }\n    .btn-good { background: #17a2b8; color: white; }\n    .btn-questions { background: #ffc107; color: #333; }\n    .btn-problems { background: #dc3545; color: white; }\n    .footer { text-align: center; margin-top: 30px; color: #666; font-size: 14px; }\n  </style>\n</head>\n<body>\n  <div class=\"container\">\n    <div class=\"header\">\n      <h1>Dark Project Arena</h1>\n      <p style=\"margin: 0; font-size: 18px;\">${$json.followupMessage}</p>\n    </div>\n    <div class=\"content\">\n      <p>–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, ${$json.contactName}!</p>\n      \n      <div style=\"white-space: pre-line;\">${$json.message.replace(/\\*\\*/g, '').replace(/\\*/g, '')}</div>\n      \n      <div class=\"feedback-buttons\">\n        <h3>–ö–∞–∫ —É –≤–∞—Å –¥–µ–ª–∞ —Å –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ–º?</h3>\n        <a href=\"mailto:support@darkproject.ru?subject=–û—Ç–∑—ã–≤: –í—Å–µ –æ—Ç–ª–∏—á–Ω–æ&body=–ö–ª—É–±: ${$json.clubName}\" class=\"btn btn-excellent\">üëç –í—Å–µ –æ—Ç–ª–∏—á–Ω–æ</a>\n        <a href=\"mailto:support@darkproject.ru?subject=–û—Ç–∑—ã–≤: –•–æ—Ä–æ—à–æ&body=–ö–ª—É–±: ${$json.clubName}\" class=\"btn btn-good\">üëå –•–æ—Ä–æ—à–æ</a>\n        <a href=\"mailto:support@darkproject.ru?subject=–ï—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã&body=–ö–ª—É–±: ${$json.clubName}\" class=\"btn btn-questions\">ü§î –ï—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã</a>\n        <a href=\"mailto:support@darkproject.ru?subject=–ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã&body=–ö–ª—É–±: ${$json.clubName}\" class=\"btn btn-problems\">üòï –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã</a>\n      </div>\n    </div>\n    <div class=\"footer\">\n      <p>–° —É–≤–∞–∂–µ–Ω–∏–µ–º,<br>–ö–æ–º–∞–Ω–¥–∞ Dark Project</p>\n      <p>üìû 8-800-XXX-XX-XX | üí¨ @darkproject_support</p>\n    </div>\n  </div>\n</body>\n</html>` \u007d}",
        "options": {
          "allowUnauthorizedCerts": true
        }
      },
      "credentials": {
        "smtp": {
          "id": "SMTP_CREDENTIALS",
          "name": "SMTP Server"
        }
      },
      "continueOnFail": true
    },
    {
      "id": "log-followup-001",
      "name": "Log Followup Activity",
      "type": "n8n-nodes-base.bitrix24",
      "typeVersion": 1,
      "position": [2060, 400],
      "parameters": {
        "resource": "activity",
        "operation": "create",
        "subject": "={{ `Follow-up: ${$json.followupMessage}` }}",
        "description": "={{ `–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ follow-up —Å–æ–æ–±—â–µ–Ω–∏–µ\\n\\n–¢–∏–ø: ${$json.followupType}\\n–ö–∞–Ω–∞–ª: ${$json.contactTelegram ? 'Telegram' : ''} ${$json.contactEmail ? 'Email' : ''}\\n\\n–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è:\\n${$json.message}` }}",
        "startTime": "={{ new Date().toISOString() }}",
        "completed": "1",
        "responsibleId": "={{ $env.CRM_BOT_USER_ID }}",
        "additionalFields": {
          "TYPE_ID": "EMAIL",
          "DIRECTION": "2",
          "ENTITY_TYPE_ID": "3",
          "ENTITY_ID": "={{ $json.dealId }}"
        }
      },
      "credentials": {
        "bitrix24Api": {
          "id": "BITRIX24_CRM",
          "name": "Bitrix24 CRM"
        }
      }
    },
    {
      "id": "check-more-followups-001",
      "name": "Check More Followups",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.1,
      "position": [2260, 400],
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "hasMore",
              "leftValue": "={{ $node['Split Followups'].context.currentRunIndex }}",
              "rightValue": "={{ $node['Split Followups'].context.maxRunIndex }}",
              "operator": {
                "type": "number",
                "operation": "smaller"
              }
            }
          ],
          "combinator": "and"
        }
      }
    },
    {
      "id": "telegram-feedback-trigger-001",
      "name": "Telegram Feedback Trigger",
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.1,
      "position": [260, 800],
      "parameters": {
        "updates": ["callback_query"]
      },
      "credentials": {
        "telegramApi": {
          "id": "TG_ROP_BOT",
          "name": "Telegram ROP Bot"
        }
      }
    },
    {
      "id": "process-feedback-001",
      "name": "Process Feedback",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [460, 800],
      "parameters": {
        "mode": "expression",
        "rules": {
          "rules": [
            {
              "output": 0,
              "outputKey": "excellent",
              "expression": "={{ $json.callback_query.data === 'feedback_excellent' }}"
            },
            {
              "output": 1,
              "outputKey": "good",
              "expression": "={{ $json.callback_query.data === 'feedback_good' }}"
            },
            {
              "output": 2,
              "outputKey": "questions",
              "expression": "={{ $json.callback_query.data === 'feedback_questions' }}"
            },
            {
              "output": 3,
              "outputKey": "problems",
              "expression": "={{ $json.callback_query.data === 'feedback_problems' }}"
            }
          ]
        },
        "fallbackOutput": 4
      }
    },
    {
      "id": "handle-positive-feedback-001",
      "name": "Handle Positive Feedback",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [660, 700],
      "parameters": {
        "operation": "sendMessage",
        "chatId": "={{ $json.callback_query.from.id }}",
        "text": "–û—Ç–ª–∏—á–Ω–æ! üéâ –†–∞–¥—ã, —á—Ç–æ –≤—ã –¥–æ–≤–æ–ª—å–Ω—ã –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ–º Dark Project!\n\n–ù–µ –∑–∞–±—É–¥—å—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ –Ω–∞ –Ω–∞—à–µ–º —Å–∞–π—Ç–µ –∏–ª–∏ –≤ —Å–æ—Ü—Å–µ—Ç—è—Ö - —ç—Ç–æ –æ—á–µ–Ω—å –ø–æ–º–æ–∂–µ—Ç –¥—Ä—É–≥–∏–º –∫–ª—É–±–∞–º —Å–¥–µ–ª–∞—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤—ã–±–æ—Ä.\n\n–ï—Å–ª–∏ –±—É–¥—É—Ç –≤–æ–ø—Ä–æ—Å—ã - –≤—Å–µ–≥–¥–∞ –Ω–∞ —Å–≤—è–∑–∏! üí™",
        "additionalFields": {}
      },
      "credentials": {
        "telegramApi": {
          "id": "TG_ROP_BOT",
          "name": "Telegram ROP Bot"
        }
      }
    },
    {
      "id": "handle-questions-problems-001",
      "name": "Handle Questions/Problems",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [660, 900],
      "parameters": {
        "operation": "sendMessage",
        "chatId": "={{ $json.callback_query.from.id }}",
        "text": "–ü–æ–Ω–∏–º–∞—é –≤–∞—à—É —Å–∏—Ç—É–∞—Ü–∏—é. –î–∞–≤–∞–π—Ç–µ —Ä–µ—à–∏–º –≤–æ–ø—Ä–æ—Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –±—ã—Å—Ç—Ä–æ!\n\nüìû –ù–∞—à —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 30 –º–∏–Ω—É—Ç.\n\n–ü–æ–∫–∞ –º–æ–∂–µ—Ç–µ –æ–ø–∏—Å–∞—Ç—å –ø—Ä–æ–±–ª–µ–º—É –∑–¥–µ—Å—å - —ç—Ç–æ —É—Å–∫–æ—Ä–∏—Ç —Ä–µ—à–µ–Ω–∏–µ.",
        "additionalFields": {}
      },
      "credentials": {
        "telegramApi": {
          "id": "TG_ROP_BOT",
          "name": "Telegram ROP Bot"
        }
      }
    },
    {
      "id": "create-support-ticket-001",
      "name": "Create Support Ticket",
      "type": "n8n-nodes-base.bitrix24",
      "typeVersion": 1,
      "position": [860, 900],
      "parameters": {
        "resource": "task",
        "operation": "create",
        "title": "={{ `Support: ${$json.callback_query.data === 'feedback_questions' ? '–í–æ–ø—Ä–æ—Å—ã' : '–ü—Ä–æ–±–ª–µ–º—ã'} –æ—Ç ${$json.callback_query.from.first_name}` }}",
        "description": "={{ `–ö–ª–∏–µ–Ω—Ç –∑–∞–ø—Ä–æ—Å–∏–ª –ø–æ–¥–¥–µ—Ä–∂–∫—É —á–µ—Ä–µ–∑ follow-up\\n\\n–¢–∏–ø: ${$json.callback_query.data}\\nTelegram: @${$json.callback_query.from.username}\\n–î–∞—Ç–∞: ${new Date().toISOString()}` }}",
        "responsibleId": "={{ $env.SUPPORT_USER_ID }}",
        "additionalFields": {
          "DEADLINE": "={{ new Date(Date.now() + 3600000).toISOString() }}",
          "PRIORITY": "2"
        }
      },
      "credentials": {
        "bitrix24Api": {
          "id": "BITRIX24_CRM",
          "name": "Bitrix24 CRM"
        }
      }
    },
    {
      "id": "error-handler-001",
      "name": "Error Handler",
      "type": "n8n-nodes-base.errorTrigger",
      "typeVersion": 1,
      "position": [2460, 600],
      "parameters": {}
    },
    {
      "id": "log-error-001",
      "name": "Log Error",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [2660, 600],
      "parameters": {
        "functionCode": "console.error('Post-Sale Followup Error:', {\n  workflow: 'WF-06 Post Sale Followup',\n  timestamp: new Date().toISOString(),\n  error: items[0].json.error,\n  context: items[0].json\n});\n\nreturn items;"
      }
    }
  ],
  "connections": {
    "Bitrix24 Deal Won Trigger": {
      "main": [
        [
          {
            "node": "Get Deal Details",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Deal Details": {
      "main": [
        [
          {
            "node": "Get Contact Info",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Contact Info": {
      "main": [
        [
          {
            "node": "Prepare Followup Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare Followup Data": {
      "main": [
        [
          {
            "node": "Schedule Followups",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Followups": {
      "main": [
        [
          {
            "node": "Split Followups",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Followups": {
      "main": [
        [
          {
            "node": "Wait Until Followup Date",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait Until Followup Date": {
      "main": [
        [
          {
            "node": "Generate Followup Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Followup Message": {
      "main": [
        [
          {
            "node": "Send Followup Telegram",
            "type": "main",
            "index": 0
          },
          {
            "node": "Send Followup Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Followup Telegram": {
      "main": [
        [
          {
            "node": "Log Followup Activity",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Followup Email": {
      "main": [
        [
          {
            "node": "Log Followup Activity",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Log Followup Activity": {
      "main": [
        [
          {
            "node": "Check More Followups",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check More Followups": {
      "main": [
        [
          {
            "node": "Split Followups",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram Feedback Trigger": {
      "main": [
        [
          {
            "node": "Process Feedback",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process Feedback": {
      "main": [
        [
          {
            "node": "Handle Positive Feedback",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Handle Positive Feedback",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Handle Questions/Problems",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Handle Questions/Problems",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Handle Questions/Problems": {
      "main": [
        [
          {
            "node": "Create Support Ticket",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Error Handler": {
      "main": [
        [
          {
            "node": "Log Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1",
    "saveManualExecutions": true
  },
  "version": 2,
  "meta": {
    "description": "Automated post-sale followup with scheduled touchpoints at 1 week, 1/3/6 months",
    "tags": ["post-sale", "followup", "customer-success", "retention"]
  }
}